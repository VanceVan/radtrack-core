// TODO: This code is a dirty secret embarassment - convert this to a jQuery object via ScrewUnit pronto ! - it's my first round of javascript that ended up all ERB'd and global functionized, like Obama wrote the code
var card_id = <%= @card.id %>;
var card_json = <%= @card.to_json %>
var tasks = <%= @card.tasks.to_json %>;

function task_owner_select(task) {
	var html = '<select id="task_owner_' + task.id + '" class="task_owner">';

	// Include a blank value and select it if no task owner exists yet
	html += '<option value=""';
	if (task.user_id == null) {
		html += ' "selected=\"selected\"';
	}
	html += '></option>';

	for (var i=0; i < users.length; i++) {
		user = users[i].user;
		html += '<option value="' + user.id + '"';
		if (user.id == task.user_id) {
			html += ' "selected=\"selected\"';
		}
		html += '>' + (user.name ? user.name : user.login) + '</option>';
	}	
	
	html += '</select>';
	return html;
}

function task_state_select(task) {
	var html = '<select id="task_state_' + task.id + '" class="task_state">';
	for (var i=0; i < task_states.length; i++) {
		task_state = task_states[i].task_state;
		html += '<option value="' + task_state.id + '"';		
		if (task_state.id == task.task_state_id) {
			html += ' "selected=\"selected\"';
		}
		html += '>' + task_state.name + '</option>';
	}	  
	html += '</select>';
	return html;
}

function delete_task_icon(task) {
	return '<%= image_tag("icons/cog_delete.png", :class => "task_delete", :style => "cursor: pointer", :title => 'Delete this task') %>';
}

function jquery_tasklist_table(tasks) {
	$('<div></div>').tasklist({tasks: tasks});
}

function tasklist_table() {
	var tasks = <%= @card.tasks.to_json %>;
    var header = '<div class="tasklist_expand_collapse">Tasks</div>';
	header += new_task_form();
	var table = header + '<table id="tasklist">';
	var tbody = '<tbody>';
	for(i =0; i < tasks.length; i++) {
		task = tasks[i].task;
		
		// TODO: Not DRY.  This HTML generation needs to be abstracted and tasks/_tasklist_row.html.erb should be removed
		var row = '<tr id="task_' + task.id + '">';
		row += '<td task_id="' + task.id + '">' + delete_task_icon(task) + '</td>'
		row += '<td>' + task_owner_select(task) + '</td>';
		row += '<td>' + task_state_select(task) + '</td>';
		row += '<td id="task_name_' + task.id + '" class="taskname">' + task.name + '</td>';
		row += '</tr>';
		tbody += row;
	}
	tbody += '</tbody>';
	table += tbody;
	table += '</table>';
	return '<div card_id="<%= @card.id %>" class="tasklist">' + table + '</div>';
}

function update_card_tasks_url(project_id, card_id, task_id) {
	return "http://<%= DOMAIN_AND_PORT %>/cards/" + card_id + "/tasks/" + task_id;
}

function task_owner_changed() {
	var user_id = $(this).val();
  var card_id = $(this).parents('.tasklist').attr('card_id');
	var task_id = $(this).attr('id').replace("task_owner_", "");
	var url = update_card_tasks_url(project_id, card_id, task_id)
	$.post(url, {"task[user_id]":user_id, "authenticity_token":window._auth_token, "_method":"put"});  
}

function task_state_changed() {
	var task_state_id = $(this).val();
  var card_id = $(this).parents('.tasklist').attr('card_id');
	var task_id = $(this).attr('id').replace("task_state_", "");
	var url = update_card_tasks_url(project_id, card_id, task_id)
	$.post(url, {"task[task_state_id]":task_state_id, "authenticity_token":window._auth_token, "_method":"put"});  
};

function task_name_changed(value, settings) { 
  var card_id = $(this).parents('.tasklist').attr('card_id');
	var task_id = $(this).attr('id').replace("task_name_", "");
	var url = update_card_tasks_url(project_id, card_id, task_id)
	$.post(url, {"task[name]":value, "authenticity_token":window._auth_token, "_method":"put"});
	return(value);
};

function new_task_form() {
	var html = '<form id="card_<%= @card.id %>" class="new_task" action="<%= project_card_tasks_url(@project, @card) %>" method="post">';
	html += '<%= hidden_field_tag :authenticity_token, form_authenticity_token %>';
	html += '<input name="task[name]" class="task_name"/>';
	html += '</form>';
	return html;
}

function popup_card_html() {
	var html = '<div id="card_details_<%= @card.id %>" class="popup_card card_fancy_zoom card_details">';

	html += '<div class="description"><%=escape_javascript(h(@card.description).gsub("\n", "<br/>")) if @card.description %></div>'; // TODO: Convert this erb to js
  html += tasklist_table(tasks);
	html += '</div>';
	return html;
}

function update_card_title(card) {
	var card_selector = make_card_id(card.id, 'kanban_card_');
	$(card_selector).update_kanban_card({card: card});
}

function card_title_changed(value, settings) { 
	var url = project_card_url(project_id, card_id);
	bodyContent = $.ajax({
	      url: url + ".json",
	      global: false,
	      type: "POST",
	      data: ({"card[title]":value, "authenticity_token":window._auth_token, "_method":"put"}),
	      dataType: "json",
	      success: function(msg){
	         update_card_title(msg.card);
	      }
	   }
	).responseText;
	

};

function card_description_changed(value, settings) { 
	var url = project_card_url(project_id, card_id);
	$.post(url, {"card[description]":value, "authenticity_token":window._auth_token, "_method":"put"}, null, "script");
	return(value);
};

// Create and popup the card
popup = $('#jquery_dialog_card');
popup.dialog('destroy');
popup.html(popup_card_html());

popup.dialog({
	minWidth: 460,
	width: 460,
	title: '<%=escape_javascript(h @card.title) %>',
	close: function(event, ui) { $('#jquery_dialog_card').dialog('destroy'); }
}).dialog('open').fadeIn("slow");

$('.spinner').hide();	
$('.delete_card').show();

function delete_task_callback_success(data, textStatus) {
	$("table#tasklist tr#"+data.taskid).fadeOut();
}

function do_delete_task() {
  if (confirm('Are you sure you want to delete this task ?')) {
	  $.post(delete_task_url(project_id, card_id, $(this).parent().attr('task_id')), {"_method":"delete", "authenticity_token":window._auth_token}, delete_task_callback_success, "json");
  };
  return true;
};

$('img.task_delete', popup).click(do_delete_task);

$('.task_owner').live("change", task_owner_changed);
$('.task_state').live("change", task_state_changed);
$('td.taskname').editable(task_name_changed, {
  indicator : '<img src="/images/spinner.gif"/>',
  tooltip   : 'Click to edit the task name...',
  placeholder: 'Click to edit the task name...',
  height:'1em'
});

$('form.new_task').submit(function() {
	$.post($(this).attr("action"), $(this).serialize(), null, "script");
	return false;
});


$('span.ui-dialog-title').editable(card_title_changed, {
  tooltip    : 'Click to edit the card title ...',
  placeholder: 'Click to edit the card title ...',
  onblur     : 'submit'
});
$('#jquery_dialog_card .description').editable(card_description_changed, { 
    type       : 'textarea',
    cancel     : 'Cancel',
    submit     : 'OK',
    tooltip    : 'Click to edit the description ...',
    placeholder: 'Click to edit the description ...',
    onblur     : 'submit'
});
$('input.task_name').clearOnFocus();
